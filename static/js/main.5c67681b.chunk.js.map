{"version":3,"sources":["container/Todos.js","container/Clock.js","component/NavBar.js","App.js","index.js"],"names":["Todo","todo","index","completeTodo","removeTodo","style","textDecoration","isCompleted","className","text","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","Todos","todos","setTodos","newTodos","splice","map","STATUS","CountdownApp","getRandomNum","secondsRemaining","setSecondsRemaining","status","setStatus","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","useInterval","padding","Math","floor","random","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","NavBar","useHistory","classes","useTheme","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","Drawer","paper","direction","List","ListItem","button","ListItemIcon","href","ListItemText","primary","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c67681b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Todo.css'\n\n//Originally I had this component just show the basic three items as static information. I later added the interactive elemets\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n\treturn (\n\t\t//the text decoration at the bottom is to strike out the text is \"isCompleted\" is true. if not, nothing will happen. This is with the ternary operator!\n\t\t<div style ={{textDecoration: todo.isCompleted ? 'line-through' : ''}} className=\"todo\"> \n\t\t\t{todo.text}\n\t\t\t<div>\n\t\t\t\t<button onClick={() => completeTodo(index)}>\n\t\t\t\t\tComplete\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<button onClick={() => removeTodo(index)}>\n\t\t\t\t\tX\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n//this is the function that allows us to add items to ouyr list\nfunction TodoForm({ addTodo }) {\n\t//In order to set our state, we write it like this: the first is the \"value\" and the second is how we are doing to be setting the state\n\tconst [value, setValue] = useState('');\n\t//adding this handle submit is key\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tif (!value) return;\n\t\taddTodo(value);\n\t\tsetValue('');\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input \n\t\t\t\ttype=\"text\" \n\t\t\t\tclassName=\"input\" \n\t\t\t\tvalue={value} \n\t\t\t\tplaceholder=\"Add todo...\"\n\t\t\t\tonChange={e => setValue(e.target.value)} />\n\t\t</form>\n\t)\n\n}\n\n\n//The below is us adding state tio our component. It is React Hooks, so state looks a but different.\nfunction Todos() {\n\tconst [todos, setTodos] = useState([\n\n\t])\n\n\t//adding a new item\n\tconst addTodo = text => {\n\t\t//this section (repeated a few times as you can see below) grabs the existing list of items, adds on the new item, and display that new list\n\t\tconst newTodos = [...todos, { text }];\n\t\tsetTodos(newTodos)\n\t}\n\n\t//completing an item with a strike through\n\tconst completeTodo = index => {\n\t\tconst newTodos = [...todos];\n\t\tnewTodos[index].isCompleted = true; //set the completion thing to true\n\t\tsetTodos(newTodos);\n\t}\n\n\t//removing an item\n\tconst removeTodo = index => {\n\t\tconst newTodos = [...todos];\n\t\tnewTodos.splice(index, 1);\n\t\tsetTodos(newTodos);\n\t}\n\t\n//time to render out everything!!! Notice how we map our the todos by going through each one with .map(). There is the name list of todos, and also a section for adding todos\n\treturn (\n\t\t<div className=\"todos\">\n\t\t\t<div>\n        <h2 className=\"SubTitle\">Todos</h2>\n\t\t\t</div>\n\t\t\t<div className=\"todo-list\"> \n\t\t\t\t{todos.map((todo, index) => (\n\t\t\t\t\t<Todo \n\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\ttodo={todo} \n\t\t\t\t\t\tcompleteTodo={completeTodo} \n\t\t\t\t\t\tremoveTodo={removeTodo}/>\n\t\t\t\t))}\n\t\t\t\t<TodoForm addTodo={addTodo} />\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Todos;","import React, {useState, useEffect, useRef} from 'react'\n// import './styles.css'\nimport \"./Clock.css\"\nconst STATUS = {\n  STARTED: 'Started',\n  STOPPED: 'Stopped',\n}\n\nexport default function CountdownApp() {\n  const [secondsRemaining, setSecondsRemaining] = useState(getRandomNum())\n  const [status, setStatus] = useState(STATUS.STOPPED)\n\n  const handleStart = () => {\n    setStatus(STATUS.STARTED)\n  }\n  const handleStop = () => {\n    setStatus(STATUS.STOPPED)\n  }\n  const handleRandom = () => {\n    setStatus(STATUS.STOPPED)\n    setSecondsRemaining(getRandomNum())\n  }\n  useInterval(\n    () => {\n      if (secondsRemaining > 0) {\n        setSecondsRemaining(secondsRemaining - 1)\n      } else {\n        setStatus(STATUS.STOPPED)\n      }\n    },\n    status === STATUS.STARTED ? 1000 : null,\n    // passing null stops the interval\n  )\n  return (\n    <div className=\"Clock\">\n      <h1>React Countdown Demo</h1>\n      <button onClick={handleStart} type=\"button\">\n        Start\n      </button>\n      <button onClick={handleStop} type=\"button\">\n        Stop\n      </button>\n      <button onClick={handleRandom} type=\"button\">\n        Random\n      </button>\n      <div style={{padding: 20}}>{secondsRemaining}</div>\n      <div>Status: {status}</div>\n    </div>\n  )\n}\n\nfunction getRandomNum() {\n  return Math.floor(Math.random() * 20)\n}\n\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Switch, Route, Link, HashRouter, withRouter } from \"react-router-dom\"\n\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport NaturePeopleIcon from '@material-ui/icons/NaturePeople';\n\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function NavBar() {\n  const history = useHistory();\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const toTodos = () => {\n\n  }\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Mini variant drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <HashRouter>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n            </IconButton>\n          </div>\n\n\n          <List>\n            {/* {['Todos', 'Clock', 'Tree'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index === 0 ? <PlaylistAddCheckIcon  href=\"https://google.com\"/> :\n                index === 1 ? <AccessAlarmIcon href=\"#Clock\"/> :\n                  <NaturePeopleIcon  />}</ListItemIcon>\n              <ListItemText primary={text} />\n              <button component={Link} to={'#Todos'}>My button</button>\n            </ListItem>\n          ))} */}\n            <ListItem button key=\"Todos\">\n              <ListItemIcon>\n                <IconButton href=\"/Todos\">\n                  <PlaylistAddCheckIcon />\n                  <ListItemText primary=\" Todos\" />\n                </IconButton>\n                \n              </ListItemIcon>\n\n            </ListItem>\n            <ListItem button>\n            <ListItemIcon>\n                <IconButton href=\"/Clock\">\n                  <AccessAlarmIcon />\n                  <ListItemText primary=\" Alarm\" />\n                </IconButton>\n              </ListItemIcon>\n            </ListItem>\n            <ListItem button>\n            <ListItemIcon>\n                <IconButton href=\"/Tree\">\n                  <NaturePeopleIcon />\n                  <ListItemText primary=\" Tree\" />\n                </IconButton>\n              </ListItemIcon>\n            </ListItem>\n          </List>\n        </Drawer>\n        {/* <Switch>\n        <PlaylistAddCheckIcon ></PlaylistAddCheckIcon>\n        <AccessAlarmIcon></AccessAlarmIcon>\n        <NaturePeopleIcon></NaturePeopleIcon>\n      </Switch> */}\n      </HashRouter>\n    </div>\n    /* <BottomNavigation>\n      <BottomNavigationAction label=\"Todos\" value=\"Todos\" icon={<PlaylistAddCheckIcon />} />\n      <BottomNavigationAction label=\"Clock\" value=\"Clock\" icon={<AccessAlarmIcon />} />\n      <BottomNavigationAction label=\"Tree\" value=\"Tree\" icon={<NaturePeopleIcon />} />\n\n    </BottomNavigation> */\n  );\n}\n","import './App.css';\nimport Todos from \"./container/Todos\"\nimport Clock from \"./container/Clock\"\nimport Tree from \"./container/Tree\"\nimport NavBar from \"./component/NavBar\"\n\n\nfunction App() {\n\n\n\n  return (\n\n    <div className=\"App\">\n      <h1>Focus.io</h1>\n      <Todos></Todos>\n      <Clock></Clock>\n      {/* <Tree></Tree> */}\n      <NavBar></NavBar>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n  <App/>,\n\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}